<!DOCTYPE html>
<html>

  <head>
    <meta charset="UTF-8">
    <title></title>
    <link rel="stylesheet" href="jquery-ui.min.css"/>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css"/>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.2.0/dist/leaflet.css"/>
    <link rel="stylesheet" href="pe-icon-7-stroke/css/pe-icon-7-stroke.css">
    <link rel="stylesheet" href="pe-icon-7-stroke/css/helper.css">
    <link rel="stylesheet" href="style.css"/>
	<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
  	<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
	<script src="https://unpkg.com/leaflet@1.2.0/dist/leaflet.js"></script>
    <script src="https://unpkg.com/esri-leaflet@2.0.4/dist/esri-leaflet.js"></script>
    <script src="https://unpkg.com/esri-leaflet-renderers@2.0.2/dist/esri-leaflet-renderers.js"></script>
    <script src='https://npmcdn.com/@turf/turf/turf.min.js'></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js" /></script>
    <script>
    	  $( function() {$( "#tools" ).draggable();} );
    	  $( function() {$( "#chart" ).draggable();} );
    </script>
  </head>

  <body>
  	<div id="mapid"></div>
  	<div id="chart" class="ui-widget-content>
  		<div class="container">
<!--   			<div class="row">
				<ul class="segmented-control">
				    <li class="segmented-control__item">
				        <input class="segmented-control__input" type="radio" value="red" name="layerControl" id="red" checked="checked">
				        <label class="segmented-control__label" for="red" style="cursor: pointer;">Red Team</label>
				    </li>
				    <li class="segmented-control__item">
				        <input class="segmented-control__input" type="radio" value="green" name="layerControl" id="green">
				        <label class="segmented-control__label" for="green" style="cursor: pointer;">Green Team</label>
				    </li>
				</ul>
			</div> -->
  			<canvas id="myChart" width="400" height="400"></canvas>	
  			<div class="row">
  				<div class="col">
  					<small>Total Land Area</small>
  				</div>
  				<div class="col">
  					<small>Area Opposed</small>
  				</div>
  				<div class="col">
  					<small>Area in Support</small>
  				</div>
  			</div>
  			<div class="row">
  				<div class="col">
  					<small><span id="totalArea"></small>
  				</div>
  				<div class="col">
  					<small><span id="opposedArea"></small>
  				</div>
  				<div class="col">
  					<small><span id="supportArea"></small>
  				</div>
  			</div>
		</div>
	</div>

		
	</div>

  	<div id="tools" class="ui-widget-content">
      <br>
      <br>
  		<div class="container">
  			<div class="row justify-content-center">
  				<div class="col text-center">
  					<span id="buf" class="pe-7s-expand1 pe-3x pe-va orange pointer click"></span>
  				</div>
  			</div>
<!--   			<div class="row justify-content-center">
  				<div class="col text-center">
  					<input type="text" id="dist" value="300"><br>
  					<small>feet</small>
  				</div>
  			</div> -->
  			<br>
  			<br>
  			<div class="row justify-content-center">
  				<div class="col text-center">
  					<span id="support" class="pe-7s-plus pe-3x pe-va pointer click" data-selected="true"></span>
  				</div>
  			</div>
  			<br>
  			<br>
  			<div class="row justify-content-center">
  				<div class="col text-center">
  					<span id="opposed" class="pe-7s-less pe-3x pe-va pointer click"></span>
  				</div>
  			</div>
  			<br>
  			<br>
  			<div class="row justify-content-center">
  				<div class="col text-center">
					   <span id="clear" class="pe-7s-close-circle pe-3x pe-va pointer click"></span>
				</div>
  			</div>	
        <br>
        <br>
        <div class="row justify-content-center">
          <div class="col text-center">
             <span id="config" class="pe-7s-config pe-3x pe-va pointer click"></span>
        </div>
        </div>  
  		</div>
  	</div>

    <div id="dialog-form" title="Settings">
      <form>
        <fieldset>
          <div class="form-group">
            <label for="distance1">Inner Distance</label><br />
            <div class="row">
              <div class="col-6">
                <input type="text" name="distance1" id="distance1" class="form-control text ui-widget-content ui-corner-all"><br />
              </div>
              <div class="col-6">ft</div>
            </div>
          </div>
          <div class="form-group">
            <label for="distance2">Outer Distance</label><br />
            <div class="row">
              <div class="col-6">
                <input type="text" name="distance2" id="distance2" class="form-control text ui-widget-content ui-corner-all"><br />
              </div>
              <div class="col-6">ft</div>
            </div>
            <div class="form-group">
              <label for="parcel_url">Parcel REST URL</label><br />
              <input type="text" name="parcel_url" id="parcel_url" class="form-control text ui-widget-content ui-corner-all">
            </div>
          </div>
     
          <!-- Allow form submission with keyboard without duplicating the dialog button -->
          <input type="submit" tabindex="-1" style="position:absolute; top:-1000px">
        </fieldset>
      </form>
    </div>

  	<script>
      var glo;
      var map;
      var parcels;
      var clicked = [];
      var intersected = [];

    $(document).ready(function(){
      $( "#config" ).on( "click", function() {    
        config.dialog.dialog( "open" );
      });

      $('.click').click(function(event){ 
        $('.click').removeClass('orange');
        $('#' + event.target.id).addClass('orange')
      });

      $('#dist').change(function () {
        clickedFeature(glo);
      });

      var default_settings = {
        inner_dist: 200,
        outer_dist: 300, 
        parcel_url: 'https://mapit.tarrantcounty.com/arcgis/rest/services/Dynamic/TADParcels/MapServer/0',
        view: { 
          center: [32.93, -97.22], 
          zoom: 17 
        }
      };

      config.init(default_settings, function(){
        map = L.map('mapid').setView(config.settings.view.center, config.settings.view.zoom);

        L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
          attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
          maxZoom: 18,
          id: 'mapbox.streets',
          accessToken: 'pk.eyJ1IjoiYnJ1bGVjIiwiYSI6IlpEOGRJVkUifQ.SDYry6LIIHfMMpajIkFCAg'
        }).addTo(map);

        parcels = L.esri.featureLayer({
          url: config.settings.parcel_url, 
          style: style, 
          onEachFeature: onEachFeature, 
          minZoom: 16 
        }).addTo(map);
      });

    });



	function style(feature) {
		return {
			weight: 2,
			opacity: 1,
			color: 'white',
			dashArray: '3',
			fillOpacity: 0.1,
			fillColor: 'white'
		};
	}

	function highlightFeature(e) {
    	var layer = e.target;
    	if (clicked.indexOf(e.target.feature.id) < 0 && intersected.indexOf(e.target.feature.id) < 0) {
		    layer.setStyle({
		        weight: 5,
		        color: '#1AD4D7',
		        dashArray: '',
		        fillOpacity: 0.7,
		        fillColor: '#A7ECED'
		    });
		}

	    if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
	        layer.bringToFront();
	    }
	}

	function resetHighlight(e) {
		var layer = e.target;
		if (clicked.indexOf(e.target.feature.id) < 0 && intersected.indexOf(e.target.feature.id) < 0) {
			layer.setStyle({
				weight: 2,
				opacity: 1,
				color: 'white',
				dashArray: '3',
				fillOpacity: 0.1,
				fillColor: 'white'
			});

	    if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
	        layer.bringToFront();
	    	}
		}
	}

	function onEachFeature(feature, layer) {
		layer.on({
			mouseover: highlightFeature,
			mouseout: resetHighlight,
			click: clickedFeature
		});
	}

  	function clickedFeature(e) {
  		layer = e.target;
      	glo =  {target: e.target};

    	if (typeof bufLyr !== 'undefined') {
    		map.removeLayer(bufLyr);
    		parcels.resetStyle();
    	}

	    layer.setStyle({
	        weight: 5,
	        color: '#666',
	        dashArray: '',
	        fillOpacity: 0.7,
	        fillColor: 'orange'
	    });

	    if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
	        layer.bringToFront();
	    }
	    clicked.push(e.target.feature.id);


	    var poly = turf.polygon([layer.feature.geometry.coordinates[0]])
      distance = parseInt(config.settings.inner_dist);
	    var buffered = turf.buffer(poly, distance, { units: 'feet' });
	    bufLyr = L.geoJson(buffered).addTo(map);

	    parcels.query()["intersects"](buffered).ids(function(error, ids){
    	 intersected = ids;
	     OIDs = ids.join();
			 for (var i = ids.length - 1; i >= 0; i--) {
		      parcels.setFeatureStyle(ids[i], { color: 'orange', weight: 3 });
	     };
  			//parcels.setWhere("OBJECTID IN (" + OIDs + ")")
	    });
	    var bbox = turf.bbox(buffered);
	    var bounds = [[bbox[1], bbox[0]], [bbox[3], bbox[2]]];
	    map.fitBounds(bounds);

	    //var clipped = turf.bboxClip(poly, buffered)
	    //L.geoJson(clipped).addTo(map);
	}

    //parcels.bindPopup(function(evt) s
    //	return L.Util.template('<h3>{GIS_LINK}</h3><hr /><p>{STREETNUMBER} {STREETNAME} {STREETTYPE}', evt.feature.properties);
	//}); 



	//chart stuff
	var data = {
	    datasets: [{
	    	data: [50, 40, 10],
	    	backgroundColor: ['#ff3333', '#339933', 'orange']
	    }],

	    // These labels appear in the legend and in the tooltips when hovering different arcs
	    labels: ['Opposed','Support', 'Other']
	};
	var ctx = document.getElementById("myChart").getContext('2d');
	var myDoughnutChart = new Chart(ctx, {
	    type: 'doughnut',
	    data: data
	});

//config stuff
  var config = {
    save: function (options) {
      $.extend(this.settings, options);
      localStorage.setItem("Config", JSON.stringify(this.settings));
      location.reload();
    },
    init: function(default_param, callback) {
      this.default_settings = default_param;
      var localConfig = JSON.parse(localStorage.getItem("Config"));
      if (localConfig) {
        this.settings = localConfig;
      } else {
        $.extend(this.settings, this.default_settings);
      }
      this.initForm();

      config.dialog.find( "form" ).on( "submit", function( event ) { 
        event.preventDefault();
        var options = config.readForm();
        config.save(options);
        config.dialog.dialog( "close" );
      });

      callback();
    },
    dialog: $( "#dialog-form" ).dialog({
      autoOpen: false,
      height: 450,
      width: 450,
      modal: true,
      buttons: {
        "Save": function() {
          var options = config.readForm();
          config.save(options);
          config.dialog.dialog("close")
        }, 
        Cancel: function() {
          config.dialog.dialog("close")
        }
      },
      close: function() {
        $('.click').removeClass('orange');
      }
    }),
    readForm: function(){
      return {
        inner_dist: parseInt($( "#distance1" ).val()),
        outer_dist: parseInt($( "#distance2" ).val()),
        parcel_url: $( "#parcel_url" ).val(), 
        view: { center: map.getCenter(), zoom: map.getZoom() }
      };
    },
    initForm: function() {
      $( "#distance1" ).val(this.settings.inner_dist);
      $( "#distance2" ).val(this.settings.outer_dist);
      $( "#parcel_url" ).val(this.settings.parcel_url);
    }
  }
  
  	</script>
  </body>
</html>


